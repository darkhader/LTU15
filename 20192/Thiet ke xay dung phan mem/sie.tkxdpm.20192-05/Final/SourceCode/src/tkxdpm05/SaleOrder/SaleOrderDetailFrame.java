/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tkxdpm05.SaleOrder;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tkxdpm05.models.merchandise.MerchandiseDTO;
import tkxdpm05.models.saleorder.SaleOrderDTO;
import tkxdpm05.models.saleorder.SaleOrderDetailDTO;

/**
 *
 * @author thiennd
 */
public class SaleOrderDetailFrame extends javax.swing.JFrame {

    /**
     * Creates new form SaleOrderFrame
     */
    ArrayList<MerchandiseDTO> listMerchandiseDTOs;
    ArrayList<SaleOrderDetailDTO> listSaleOrderDetailDTOs;
    SaleOrderDTO saleOrderDTO;

    DefaultTableModel tableMerchandiseModel;
    DefaultTableModel tableSaleOrderDetailModel;

    String[] tableMerchandiseHeader = new String[]{"Merchandise ID", "Name", "Unit"};
    String[] tableSaleOrderDetailHeader = new String[]{"Detail ID", "Sale Order ID", "Merchandise ID", "Quantity"};

    public SaleOrderDetailFrame() {
        initComponents();

    }

    public void setsaleOrderDTO(SaleOrderDTO saleOrderDTO) {
        this.saleOrderDTO = saleOrderDTO;
        initUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMerchandise = new javax.swing.JTable();
        spinner = new javax.swing.JSpinner();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSaleOrderDetail = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableMerchandise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tableMerchandise);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tableSaleOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableSaleOrderDetail);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Discard");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinner)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int count = (int) spinner.getValue();
        if (count <= 0) {
            return;
        }
        int index = tableMerchandise.getSelectedRow();
        if (index < 0) {
            return;
        }
        int exist = -1;
        for (SaleOrderDetailDTO detail : listSaleOrderDetailDTOs) {
            if (detail.getMerchandiseId() == listMerchandiseDTOs.get(index).getMerchandiseId()) {
                exist = listSaleOrderDetailDTOs.indexOf(detail);
                break;
            }
        }
        if (exist != -1) {
            int old = listSaleOrderDetailDTOs.get(exist).getQuantity();
            listSaleOrderDetailDTOs.get(exist).setQuantity(count + old);
            tableSaleOrderDetailModel.setValueAt(count + old, exist, 3);
        } else {
            SaleOrderDetailDTO saleOrderDetailDTO = new SaleOrderDetailDTO();
            saleOrderDetailDTO.setSaleOrderDetailId(-1);
            saleOrderDetailDTO.setQuantity(count);
            saleOrderDetailDTO.setMerchandiseId(listMerchandiseDTOs.get(index).getMerchandiseId());
            saleOrderDetailDTO.setSaleOrderId(saleOrderDTO.getSaleOrderId());

            listSaleOrderDetailDTOs.add(saleOrderDetailDTO);
            String[] data = new String[4];
            data[0] = "AUTO GENERATE";
            data[1] = saleOrderDetailDTO.getSaleOrderId() + "";
            data[2] = saleOrderDetailDTO.getMerchandiseId() + "";
            data[3] = saleOrderDetailDTO.getQuantity() + "";

            tableSaleOrderDetailModel.addRow(data);
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        initUI();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int index = tableSaleOrderDetail.getSelectedRow();
        if (index < 0) {
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Can not undo? Are you sure?", "Confirm", JOptionPane.OK_CANCEL_OPTION);
        if (confirm == JOptionPane.OK_OPTION) {
            SaleOrderController.getInstance().deleteSaleOrderDetail(listSaleOrderDetailDTOs.get(index));
            tableSaleOrderDetailModel.removeRow(index);
            listSaleOrderDetailDTOs.remove(index);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (!saleOrderDTO.getStatus().equals("NEW")) {
            JOptionPane.showMessageDialog(this, "Can not make change!");
            showListSaleOrderDetail();
            return;
        }
        for (SaleOrderDetailDTO saleOrderDetailDTO : listSaleOrderDetailDTOs) {
            if (saleOrderDetailDTO.getSaleOrderDetailId() == -1) {
                SaleOrderController.getInstance().createSaleOrderDetail(saleOrderDetailDTO);
            } else {
                SaleOrderController.getInstance().updateSaleOrderDetail(saleOrderDetailDTO);
            }
        }
        initUI();
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleOrderDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleOrderDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleOrderDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleOrderDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleOrderDetailFrame().setVisible(true);
            }
        });
    }

    private void initUI() {
        this.setTitle(this.getClass().getSimpleName());
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        showListMerchandise();
        showListSaleOrderDetail();
    }

    public void showListSaleOrderDetail() {

        listSaleOrderDetailDTOs = new ArrayList<>();
        tableSaleOrderDetailModel = new DefaultTableModel(tableSaleOrderDetailHeader, 0);
        tableSaleOrderDetail.setModel(tableSaleOrderDetailModel);
        listSaleOrderDetailDTOs = SaleOrderController.getInstance().readSaleOrderDetail(saleOrderDTO);
        for (SaleOrderDetailDTO saleOrderDTO : listSaleOrderDetailDTOs) {
            String[] data = new String[4];
            data[0] = saleOrderDTO.getSaleOrderDetailId() + "";
            data[1] = saleOrderDTO.getSaleOrderId() + "";
            data[2] = saleOrderDTO.getMerchandiseId() + "";
            data[3] = saleOrderDTO.getQuantity() + "";
            tableSaleOrderDetailModel.addRow(data);
        }

    }

    public void showListMerchandise() {
        listMerchandiseDTOs = new ArrayList<>();
        tableMerchandiseModel = new DefaultTableModel(tableMerchandiseHeader, 0);
        tableMerchandise.setModel(tableMerchandiseModel);
        listMerchandiseDTOs = SaleOrderController.getInstance().readAllMerchandise();
        for (MerchandiseDTO merchandiseDTO : listMerchandiseDTOs) {
            String[] data = new String[3];
            data[0] = merchandiseDTO.getMerchandiseId() + "";
            data[1] = merchandiseDTO.getDispName();
            data[2] = merchandiseDTO.getUnit();
            tableMerchandiseModel.addRow(data);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinner;
    private javax.swing.JTable tableMerchandise;
    private javax.swing.JTable tableSaleOrderDetail;
    // End of variables declaration//GEN-END:variables
}
