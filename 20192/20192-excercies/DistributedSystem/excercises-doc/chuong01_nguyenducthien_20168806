1. Lý thuyết 
	1.1 Ví dụ về hệ phân tán: 
		Dịch vụ Network File System NFS. Sau khi mount thì cho phép nguời dùng truy cập vào hệ thống file như trên máy mình. 
		Dịch vụ Torrent. Mô hình phân tán peer-to-peer, file được phân mảnh 8mb/mảnh, sau khi một máy tải xong thì nó cũng chuyển tiếp mảnh này cho các máy lân cận trong mạng (seeding). 
	1.2 Tính chia sẻ tài nguyên có khả năng:
		- Giảm chi phí: giúp mọi người đồng thời truy cập vào 1 tài nguyên, giải quyết tương tranh, tránh phải tạo bản sao của tài nguyên. Ví dụ mọi người cùng sử dụng chung 1 máy in và in lần lượt thay vì mua mỗi người 1 máy in cá nhân.
		- Tăng tính sẵn sàng: dữ liệu được phân bố tại nhiều địa điểm, giúp người dùng có thể truy cập nhanh chóng tới tài nguyên. Ví dụ người dùng có thể truy cập nhanh chóng tới dịch vụ Gmail thông qua các máu chủ phân bố trên toàn cầu.
		- Hỗ trợ làm việc nhóm: hệ phân tán giảm các khó khăn về khoảng các địa lý, thời gian tính toán. Ví dụ có thể in tài liệu từ xa thông qua máy in được kết nối đến hệ phân tán, gửi các email nhanh chóng qua hệ thống máy chủ toàn cầu. 
		- Tăng rủi ro an toàn về thông tin: tính mở của hệ phân tán giúp người dùng có thể truy cập tới tài nguyên hệ thống như một máy tính cục bộ, khiến cho việc các dữ liệu cá nhân trở nên "mở" với người dùng khác. Ví dụ người dùng có thể lạm dụng máy in cho mục đích in ấn cá nhân. 
		
	1.3 Để đáp ứng tính trong suốt thì cần tăng khả năng đáp ứng của hệ thống. 
		Ví dụ để đáp ứng tính trong suốt về địa lý của hệ thống NFS, cần triển khai thật nhiều máy chủ trên toàn cầu để đáp ứng truy cập nhanh nhất có thể từ các khu vực, che đi sự chậm chễ của hệ thống do phân tán dữ liệu. Lúc này chi phí lại tăng nên. Vì vậy nhà quản trị hệ thống cần xem xét cân bằng giữa chi phí hiệu năng và độ trong suốt ở một mức chấp nhận được.  
	1.4 Interface trọng bởi vì nó cung cấp khả năng tương thích không phụ thuộc vào phần cứng của hệ phân tán, giúp cho hệ phân tán có thể triển khai trên nhiều nền tảng phần cứng khác nhau, đảm bảo tính mở.
	1.5 
NOS:
	- Hệ điều hành cho phép kết hợp nhiều máy tính không đồng nhất. Người dùng nhận thức được sự đa dạng của máy tính trong NOS (máy tính, máy in, fax, ...) 
	- Chia sẻ tài nguyên thông qua giao thức truyền file (FTP).
	- Sự cho phép đa dạng máy tính giúp NOS dễ mở rộng hơn, nhưng lại gây khó khăn cho người dùng khi giao tiếp với nhiều loại hệ điều hành. 
DOS:
	- Hệ điều hành kết hợp nhiều máy tính đồng nhất với nhau để tăng khả năng xử lý, người dùng nhận thức như 1 máy tính thay vì 1 hệ thống. 
	- Chia sẻ tài nguyên trực tiếp như trên một máy tính cục bộ. 
	- Sự đồng nhất giữa các máy tính khiến DOS khó mở rộng hơn NOS. Nhưng lại dễ hơn cho người dùng vì chỉ giao tiếp với 1 loại hệ điều hành.
Middleware là sự kết hợp ưu điểm của cả DOS và NOS.
Middleware dễ mở rộng hơn khi không cần sự đồng nhất giữa các máy tính, mà thay vào đó cung cấp interface, một giải pháp phần mềm giao tiếp với phần mềm. Và vẫn giữ được tính đồng nhất đối với người dùng. Middleware tạo nên sự đa dạng về phần cứng giúp hệ thống dễ dàng mở rộng, đồng thời vẫn giữ được tính trong suốt đối với người dùng. 

2. Thực hành 
	2.1 /var/www/html
	2.2 Cổng 80 
	2.3 755 = (1+2+4)(1+4)(1+4) = -rwxrw-rw-
	Quyền đọc, ghi, thực thi cho người sở hữu, còn lại group và những người khác chỉ có quyền đọc và thực thi.  
	2.4 File example.com.conf và test.com.conf phải có dấu nháy đôi "".   
DocumentRoot "/var/www/example.com/public_html"
	Truy cập từ trình duyệt sẽ thấy nội dung được ghi trong file index.html của mỗi trang web. 
	2.5 Chưa truy cập được từ mạng LAN.

Source code: https://github.com/ndthien98/20192-excercies/tree/master/DistributedSystem-Exercise-01
	 
